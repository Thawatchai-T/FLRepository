/*
* File: app/controller/HomeController.js
*
* This file was generated by Sencha Architect version 3.1.0.
* http://www.sencha.com/products/architect/
*
* This file requires use of the Ext JS 5.0.x library, under independent license.
* License of Sencha Architect does not include license for Ext JS 5.0.x. For more
* details see http://www.sencha.com/license or contact license@sencha.com.
*
* This file will be auto-generated each and everytime you save your project.
*
* Do NOT hand edit this file.
*/

Ext.define('TabUserInformation.controller.HomeController', {
    extend: 'Ext.app.Controller',

    control: {
        "#myviewport": {
            beforerender: 'doLogin'
        }
//        ,
//        "#tabManagement": {
//            beforerender: 'tabManagement'
//        }
    },

    doLogin: function (component, eOpts) {
        var popup = Ext.create('widget.windowloginwindow');
        //Show login windows

        var supportsLocalStorage = Ext.supports.LocalStorage,
            loggedIn;
        if (supportsLocalStorage) {
            //Ext.Msg.alert('supports');
            loggedIn = localStorage.getItem("bar");
            console.log(loggedIn);
           // if (!loggedIn) popup.show();
        }


    },

    tabManagement: function (container, component, eOpts) {
        var store = Ext.getStore('userInTabs');

        store.on('load', function (store, records, successful) {
            Ext.Object.each(records, function (index, record, records) {
                //                if(record.get('TabId') == _container.
                if (record.get('Tab').Name != container.items.getAt(index).getId()) {
                    container.items.removeAt(index);
                    container.getTabBar().items.removeAt(index);
                    console.log(index);
                }
            });
        }, this);

        //                container.items.removeAt(2);
        //                container.getTabBar().items.removeAt(2);
        //container.doLayout();
        console.log('before');
    }

});
