/*
 * File: app/view/Restructure/ARCardViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.Restructure.ARCardViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.restructurearcard',

    onCalculateInstallment: function (button, e, eOpts) {
        var view = this.getView(),
            form = this.getView().down('form').getForm(),
            SEQ = form.findField('SEQ').getValue(),
            NewCheck = form.findField('NewCheck').getValue();

        if (form.isValid()) {
            var headform = Ext.getCmp('head-restructure-form').getForm(),
                values = form.getValues(),
                record = Ext.create('model.restructurelist', values),
                OSPR = null;

            form.updateRecord(record);
            
            if(form.findField('NewCheck').checked){
                OSPR = 'New_OS_PR';
            }else{
                OSPR = 'OS_PR';
            }

            var Installment = TabUserInformation.view.Restructure.RestructureWindowViewController.C1(record.get('NewFlatRate'), record.get('NewTerm'), record.get(OSPR));
            var objArray = [];

            var RestructureMonth = Ext.Date.format(record.get('RestructureDate'), 'm/Y'),
                NewFirstDueMonth = Ext.Date.format(record.get('NewFirstDueDate'), 'm/Y'),
                NewTerm = record.get('NewTerm');


            //กรณี NewFirstDueMonth งวดแรกเป็นเดือนเดียวกับ RestructureMonth
            if (RestructureMonth == NewFirstDueMonth) {
                for (i = 0; i <= NewTerm - 1; i++) {
                    if (i == 0) {
                        objArray[i] = (record.get(OSPR) * -1) + Installment;
                    }
                    else {
                        objArray[i] = Installment;
                    }
                }
            }
            //Case กรณีปกติ
            else {
                for (i = 0; i <= NewTerm; i++) {
                    if (i == 0) {
                        objArray[i] = record.get(OSPR) * -1;
                    }
                    else {
                        objArray[i] = Installment;
                    }
                }
            }

            //C5 Calculate EffectiveRate
            Ext.Ajax.request({
                method: 'post',
                url: 'api/installment/PostEffectiveRate',
                jsonData: objArray,
                success: function (response) {
                    record.set('EffectiveRate', response.responseText);

                    var popup = Ext.create('widget.restructurerestructurewindow', {
                        listeners: {
                            beforerender: function (panel, eOpts) {
                                panel.down('form').getForm().loadRecord(record);
                                panel.down('form').getForm().findField('SEQ').setValue(SEQ);
                                sessionStorage.setItem('dataRestructure', Ext.encode(record.data));
                                sessionStorage.setItem('dataInstallment', null);
                                panel.down('form').getForm().findField('NewCheck').setValue(NewCheck);
                            },
                            beforeclose: function (panel, eOpts) {
                                var store = panel.down('grid').getStore();

                                 if (panel.closeMe || panel.down('form').getForm().findField('Save').getValue() === 'Y') {
                                    panel.closeMe = false;
                                    
                                    return true;
                                }

                                if (store.getModifiedRecords().length > 0) {
                                    Ext.Msg.show({
                                        title: 'Save',
                                        message: 'Save Changes?',
                                        buttons: Ext.Msg.YESNOCANCEL,
                                        icon: Ext.Msg.QUESTION,
                                        width: 300,
                                        fn: function (btn) {
                                            if (btn === 'yes') {
                                                Ext.MessageBox.show({
                                                    title: 'Please wait',
                                                    msg: 'Saving items...',
                                                    progressText: 'Saving...',
                                                    width: 300,
                                                    progress: true,
                                                    closable: false,
                                                });

                                                store.data.each(function (record, index) {
                                                    var i = index + 1;
                                                    Ext.Ajax.request({
                                                        method: 'post',
                                                        url: 'api/Installment/Post',
                                                        params: record.data,
                                                        success: function (response) {
                                                            if (i === store.data.length) {
                                                                Ext.MessageBox.hide();
                                                            } else {
                                                                var val = i / (store.data.length - 1);
                                                                Ext.MessageBox.updateProgress(val, Math.round(100 * val) + '% completed');
                                                                //setTimeout(this.fn(i, length), 500);
                                                            }
                                                        },
                                                        failure: function (response) {
                            
                                                        }
                                                    });
                                                });

                                                Ext.Ajax.request({
                                                    method: 'post',
                                                    url: 'api/Restructure/Post',
                                                    params: record.data,
                                                    success: function (response) {
                                                        Ext.MessageBox.hide();
                                                        Ext.MessageBox.alert("Result", "Successful.");
                                                        panel.closeMe = true;
                                                        panel.close();
                                                    },
                                                    failure: function (response) {
                                                        Ext.MessageBox.hide();
                                                        Ext.MessageBox.alert("Error", response.responseText);
                                                    }
                                                });

//                                                store.sync({
//                                                    success: function (batch, options) {
//                                                        Ext.Ajax.request({
//                                                            method: 'post',
//                                                            url: 'api/Restructure/Post',
//                                                            //params: obj,
//                                                            params: record.data,
//                                                            success: function (response) {
//                                                                Ext.MessageBox.hide();
//                                                                Ext.MessageBox.alert("Result", "Successful.");
//                                                                panel.closeMe = true;
//                                                                panel.close();
//                                                            },
//                                                            failure: function (response) {
//                                                                Ext.MessageBox.hide();
//                                                                Ext.MessageBox.alert("Error", response.responseText);
//                                                            }
//                                                        });
//                                                    }
//                                                });
                                            } else if (btn === 'no') {
                                                panel.closeMe = true;
                                                panel.close();
                                            } else {
                                            }
                                        }
                                    });
                                } 

                                return false;
                            },
                            close: function (panel, eOpts) {
                                Ext.getCmp('restructurerestructurelist').down('pagingtoolbar').moveFirst();
                            }
                        }
                    });
                    popup.show();

                    view.close();
                },
                failure: function (response) {
                }
            });

        } else {

        }
    },

    onCancel: function (button, e, eOpts) {
        var form = this.getView().down('form').getForm();
        form.reset();
    },

    onAfterRender: function (component, eOpts) {
        Ext.getCmp('arcard-form1').getForm().findField('NewFlatRate').focus();
    }

});
