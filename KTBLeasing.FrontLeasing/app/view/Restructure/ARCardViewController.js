/*
 * File: app/view/Restructure/ARCardViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.Restructure.ARCardViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.restructurearcard',

    onCheckboxfieldChange: function (field, newValue, oldValue, eOpts) {
        var form = this.getView().down('form').getForm(),
            New_OS_PR = form.findField('New_OS_PR');

        if (field.checked) {
            New_OS_PR.allowBlank = false;
        } else {
            New_OS_PR.allowBlank = true;
            New_OS_PR.validate();
        }
    },

    onCalculateInstallment: function (button, e, eOpts) {
        var view = this.getView(),
            form = this.getView().down('form').getForm(),
            me = this,
            headform = Ext.getCmp('head-restructure-form').getForm(),
            values = form.getValues(),
            record = Ext.create('model.restructurelist', values),
            OSPR = null;

        if (form.isValid()) {
            form.updateRecord(record);

            if (form.findField('NewCheck').checked) {
                OSPR = 'New_OS_PR';
            } else {
                OSPR = 'OS_PR';
            }

            var Installment = TabUserInformation.view.Restructure.RestructureWindowViewController.C1(record.get('NewFlatRate'), record.get('NewTerm'), record.get(OSPR));
            var objArray = [];

            var RestructureMonth = Ext.Date.format(record.get('RestructureDate'), 'm/Y'),
                NewFirstDueMonth = Ext.Date.format(record.get('NewFirstDueDate'), 'm/Y'),
                NewTerm = record.get('NewTerm');


            //กรณี NewFirstDueMonth งวดแรกเป็นเดือนเดียวกับ RestructureMonth
            if (RestructureMonth == NewFirstDueMonth) {
                for (i = 0; i <= NewTerm - 1; i++) {
                    if (i == 0) {
                        objArray[i] = (record.get(OSPR) * -1) + Installment;
                    }
                    else {
                        objArray[i] = Installment;
                    }
                }
            }
            //Case กรณีปกติ
            else {
                for (i = 0; i <= NewTerm; i++) {
                    if (i == 0) {
                        objArray[i] = record.get(OSPR) * -1;
                    }
                    else {
                        objArray[i] = Installment;
                    }
                }
            }

            if (!form.findField('Rate').checked) {
                //C5 Calculate EffectiveRate
                Ext.Ajax.request({
                    method: 'post',
                    url: 'api/installment/PostEffectiveRate',
                    jsonData: objArray,
                    success: function (response) {
                        record.set('EffectiveRate', response.responseText);
                        record.set('EffectiveRateDisplay', response.responseText);

                        sessionStorage.setItem('dataRestructure', Ext.encode(record.data));
                        sessionStorage.setItem('dataInstallment', null);

                        me.onWindowPopupRestructure(form, record);
                        view.close();
                    },
                    failure: function (response) {
                        Ext.Msg.show({
                            title: 'Error',
                            message: 'ไม่สามารถคำนวณ Effective Rate ได้โปรดกรอกข้อมูลให้ถูกต้อง.',
                            buttons: Ext.Msg.OK,
                            icon: Ext.Msg.ERROR
                        });
                    }
                });
            } else {
                //C5 Calculate PmtRate
                Ext.Ajax.request({
                    method: 'get',
                    url: 'api/installment/GetPmtRate',
                    params: {
                        Rate: form.findField('EffectiveRate').getValue(),
                        NPer: record.get('NewTerm'),
                        PV: record.get(OSPR)
                    },
                    success: function (response) {
                        var dataInstallment = [];

                        record.set('EffectiveRate', form.findField('EffectiveRate').getValue());
                        record.set('EffectiveRateDisplay', form.findField('EffectiveRate').getValue());

                        for (i = 0; i <= NewTerm; i++) {
                            if (i == 0) {
                                dataInstallment[i] = record.get(OSPR) * -1;
                            }
                            else {
                                dataInstallment[i] = response.responseText;
                            }
                        }

                        sessionStorage.setItem('dataRestructure', Ext.encode(record.data));
                        sessionStorage.setItem('dataInstallment', Ext.encode(dataInstallment));

                        me.onWindowPopupRestructure(form, record);
                        view.close();
                    },
                    failure: function (response) {
                        Ext.MessageBox.alert('Error', 'ไม่สามารถคำนวณค่า 0 ได้');
                    }
                });
            }
        } else {

        }
    },

    onWindowPopupRestructure: function (form, record) {
        var popup = Ext.create('widget.restructurerestructurewindow', {
            listeners: {
                beforerender: function (panel, eOpts) {
                    panel.down('form').getForm().loadRecord(record);
                    panel.down('form').getForm().findField('SEQ').setValue(form.findField('SEQ').getValue());
                    panel.down('form').getForm().findField('NewCheck').setValue(form.findField('NewCheck').getValue());
                    panel.down('form').getForm().findField('Rate').setValue(form.findField('Rate').getValue());
                }
            }
        });
        popup.show();
    },

    onCancel: function (button, e, eOpts) {
        var form = this.getView().down('form').getForm();
        form.reset();
    },

    onAfterRender: function (component, eOpts) {
        Ext.getCmp('arcard-form1').getForm().findField('NewFlatRate').focus();
    }

});
