/*
 * File: app/view/Popup/UserInfPopup.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.User.UserInfPopup', {
    extend: 'Ext.window.Window',
    alias: 'widget.popupuserinfpopup',

    requires: [
        'TabUserInformation.view.User.UserInfPopupViewModel',
        'TabUserInformation.view.User.UserInfPopupViewController',
        'Ext.form.field.Text',
        'Ext.button.Button',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.toolbar.Paging',
        'Ext.grid.column.Column'
    ],

    controller: 'popupuserinfpopup',
    viewModel: {
        type: 'popupuserinfpopup'
    },
    width: 800,
    title: 'User Information',
    modal: true,

    items: [
        {
            xtype: 'panel',
            bodyPadding: 10,
            layout: {
                type: 'hbox',
                align: 'middle'
            },
            items: [
                {
                    xtype: 'textfield',
                    fieldLabel: 'Search Text',
                    labelAlign: 'right'
                },
                {
                    xtype: 'button',
                    margin: '0 0 0 5',
                    text: 'Search',
                    listeners: {
                        click: 'onButtonSearchClick'
                    }
                },
                {
                    xtype: 'radiogroup',
                    width: '100%',
                    layout: {
                        type: 'checkboxgroup',
                        autoFlex: false
                    },
                    items: [
                        {
                            xtype: 'radiofield',
                            boxLabel: 'Order By Code'
                        },
                        {
                            xtype: 'radiofield',
                            margin: '0 0 0 5',
                            boxLabel: 'Order by Name'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'gridpanel',
            autoScroll: true,
            forceFit: true,
            height: 500,
            store: 'userInformations',
            dockedItems: [
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    ui: 'footer',
                    width: 360,
                    displayInfo: true,
                    store: 'userInformations'
                }
            ],
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'MarketingCode',
                    text: 'MarketingCode'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'TitleNameTh',
                    text: 'Title'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'FullNameTh',
                    text: 'Name'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'Position',
                    text: 'Position'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'DepartmentName',
                    text: 'Department'
                }
            ],
            listeners: {
                itemdblclick: 'onGridpanelItemDblClick'
            }
        },
        {
            xtype: 'toolbar',
            itemId: 'userinf-toolbar',
            ui: 'footer',
            items: [
                {
                    xtype: 'button',
                    text: 'New',
                    listeners: {
                        click: 'onButtonNewClick'
                    }
                },
                {
                    xtype: 'button',
                    text: 'Edit',
                    listeners: {
                        click: 'onButtonEditClick'
                    }
                }
            ]
        }
    ]

});