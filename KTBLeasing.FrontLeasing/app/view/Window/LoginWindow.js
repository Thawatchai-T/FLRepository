/*
 * File: app/view/Window/LoginWindow.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.Window.LoginWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.windowloginwindow',

    requires: [
        'TabUserInformation.view.Window.LoginWindowViewModel',
        'Ext.form.Panel',
        'Ext.form.field.Text',
        'Ext.button.Button',
        "Ext.require([' * '])"
    ],

    viewModel: {
        type: 'windowloginwindow'
    },
    id: 'loginwindow',
    width: 400,
    bodyPadding: 30,
    closable: false,
    title: 'Commercial System Log-in',
    modal: true,
    enableKeyEvents: true,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            id: 'loginform',
            layout: {
                type: 'vbox',
                align: 'center',
                pack: 'center'
            },
            items: [
                {
                    xtype: 'textfield',
                    flex: 1,
                    id: 'username',
                    name: 'User.UserName',
                    fieldLabel: 'Username',
                    allowBlank: false,
                    msgTarget: 'under',
                    regex: /^[a-zA-Z]\S*.[_].[{2,}a-zA-Z]$/,
                    invalidText: 'FisrtName_Lastname 2 digit'
                },
                {
                    xtype: 'textfield',
                    id: 'password',
                    name: 'User.Password',
                    fieldLabel: 'Password',
                    inputType: 'password',
                    allowBlank: false,
                    msgTarget: 'under',
                    regex: /^[a-zA-Z]*.[_].[{2,}a-zA-A]$/,
                    invalidText: 'xxxxxxxxx'
                },
                {
                    xtype: 'button',
                    id: 'login',
                    text: 'Log-in',
                    listeners: {
                        click: 'onLoginClick'
                    }
                }
            ]
        }
    ],

    onLoginClick: function (button, e, eOpts) {

        console.log(button);
        console.log(e);
        //var form = this.Ext.getCmp('tsetform').down('form').getForm();
        var form = this.down('form').getForm();
        console.log(form);
        if (form.isValid()) {
            form.submit({
                url: 'api/user',
                type: 'POST',
                success: function (formPanel, action) {
                    //var data = Ext.decode(action.response.responseText);
                    console.log("Success: " + action);
                },
                failure: function (formPanel, action) {
                   // var data = Ext.decode(action.response.responseText);
                    console.log("Failure: " + action);
                }
            });
            // this.close();
        }

        //this.close();
    }

}); 