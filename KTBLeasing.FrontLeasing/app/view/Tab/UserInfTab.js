/*
 * File: app/view/Tab/UserInfTab.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.Tab.UserInfTab', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabuserinftab',

    requires: [
        'TabUserInformation.view.Tab.UserInfTabViewModel',
        'TabUserInformation.view.Tab.UserInfTabViewController',
        'Ext.form.field.Text',
        'Ext.form.trigger.Trigger',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.toolbar.Paging',
        'Ext.grid.column.Column',
        'Ext.form.Panel',
        'Ext.button.Button'
    ],

    controller: 'tabuserinftab',
    viewModel: {
        type: 'tabuserinftab'
    },
    resizable: false,
    width: '100%',
    manageHeight: false,
    title: 'User Information',

    items: [
        {
            xtype: 'panel',
            bodyPadding: 10,
            layout: {
                type: 'hbox',
                align: 'middle'
            },
            items: [
                {
                    xtype: 'textfield',
                    fieldLabel: 'ค้นหา',
                    labelAlign: 'right',
                    enableKeyEvents: true,
                    triggers: {
                        mytrigger: {
                            cls: 'x-form-search-trigger'
                        }
                    },
                    listeners: {
                        keyup: {
                            fn: 'onTextfieldKeyup',
                            buffer: 500
                        }
                    }
                },
                {
                    xtype: 'radiogroup',
                    flex: -1,
                    width: 400,
                    hideLabel: true,
                    layout: {
                        type: 'checkboxgroup',
                        autoFlex: false
                    },
                    items: [
                        {
                            xtype: 'radiofield',
                            name: 'orderby',
                            boxLabel: 'Order by Code',
                            inputValue: 'code'
                        },
                        {
                            xtype: 'radiofield',
                            margin: '0 0 0 5',
                            name: 'orderby',
                            boxLabel: 'Order by Name',
                            checked: true,
                            inputValue: 'name'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'gridpanel',
            autoScroll: true,
            height: 768,
            store: 'userInformations',
            bind: {
                reference: 'userinf'
            },
            dockedItems: [
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    ui: 'footer',
                    width: 360,
                    displayInfo: true,
                    store: 'userInformations'
                }
            ],
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'UserId',
                    text: 'UserId'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'IdTitleName',
                    text: 'TitleNameTh',
                    renderer: function (value, metaData, record, rowIndex, colIndex, store, view) {
                        console.log(record);
                        console.log(value);
                        return record.get('TitleNameTh');
                    }

                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'TitleNameEng',
                    text: 'TitleNameEng'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'FirstNameTh',
                    text: 'FirstNameTh'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'LastNameTh',
                    text: 'LastNameTh'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'FirstNameEng',
                    text: 'FirstNameEng'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'LastNameEng',
                    text: 'LastNameEng'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'Position',
                    text: 'Position'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'MarketingGroup',
                    text: 'MarketingGroup'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'MarketingCode',
                    text: 'MarketingCode'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'CreateDate',
                    text: 'CreateDate'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'UpdateDate',
                    text: 'UpdateDate'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'CreateBy',
                    text: 'CreateBy'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'UpdateBy',
                    text: 'UpdateBy'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'Id',
                    text: 'Id'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'DepartmentCode',
                    text: 'DepartmentCode'
                }
            ],
            listeners: {
                itemdblclick: 'onGridpanelItemDblClick',
                selectionchange: 'onGridpanelSelectionChange'
            }
        },
        {
            xtype: 'form',
            height: 214,
            hidden: true,
            bodyPadding: 10,
            waitTitle: '',
            items: [
                {
                    xtype: 'textfield',
                    width: 500,
                    fieldLabel: 'Address',
                    name: 'Position'
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Telephone',
                    inputType: 'tel'
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Fax'
                },
                {
                    xtype: 'textfield',
                    width: 400,
                    fieldLabel: 'Email',
                    inputType: 'email'
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'bottom',
            ui: 'footer',
            items: [
                {
                    xtype: 'button',
                    text: 'New',
                    listeners: {
                        click: 'onButtonNewClick'
                    }
                },
                {
                    xtype: 'button',
                    text: 'Edit',
                    listeners: {
                        click: 'onButtonEditClick'
                    }
                }
            ]
        }
    ]

});