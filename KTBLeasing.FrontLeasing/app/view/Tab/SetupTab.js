/*
* File: app/view/Tab/SetupTab.js
*
* This file was generated by Sencha Architect version 3.1.0.
* http://www.sencha.com/products/architect/
*
* This file requires use of the Ext JS 5.0.x library, under independent license.
* License of Sencha Architect does not include license for Ext JS 5.0.x. For more
* details see http://www.sencha.com/license or contact license@sencha.com.
*
* This file will be auto-generated each and everytime you save your project.
*
* Do NOT hand edit this file.
*/

Ext.define('TabUserInformation.view.Tab.SetupTab', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabsetuptab',

    requires: [
        'TabUserInformation.view.Tab.SetupTabViewModel',
        'TabUserInformation.view.Tab.SetupTabViewController',
        'Ext.form.field.Text',
        'Ext.button.Button',
        'Ext.tree.Panel',
        'Ext.tree.View',
        'Ext.tree.Column',
        'Ext.toolbar.Toolbar'
    ],

    controller: 'tabsetuptab',
    viewModel: {
        type: 'tabsetuptab'
    },
    title: 'Setup Tab',

    items: [
        {
            xtype: 'panel',
            bodyPadding: 10,
            layout: {
                type: 'hbox',
                align: 'middle'
            },
            items: [
                {
                    xtype: 'textfield',
                    fieldLabel: 'Search Text',
                    labelAlign: 'right'
                },
                {
                    xtype: 'button',
                    margin: '0 0 0 5',
                    text: 'Search',
                    listeners: {
                        click: 'onButtonSearchClick11'
                    }
                }
            ]
        },
        {
            xtype: 'treepanel',
            title: 'ไตเติ้ล',
            //hideHeaders: true,
            store: 'commonDatas',
            id: 'tree-setup',
            reserveScrollbar: true,
            collapsible: true,
            loadMask: true,
            useArrows: true,
            rootVisible: false,
            animate: false,
            height: 750,
            margin: '10 10 10 10',
            viewConfig: {

            },
            columns: [
                {
                    xtype: 'treecolumn',
                    dataIndex: 'Name',
                    text: 'Name',
                    sortable: true,
                    flex: -1
                },
                {
                    xtype: 'actioncolumn',
                    icon: 'resources/icons/page_white_edit.png',
                    width: 50,
                    handler: function (view, rowIndex, colIndex, item, e, record, row) {
                        var editbutton = Ext.getCmp('commondata-edit-button');
                        var addbutton = Ext.getCmp('commondata-add-button');
                        addbutton.hide();
                        editbutton.show();
                        var button = editbutton;

                        switch (record.get('Levels')) {
                            case 1: button.setText('Edit Province');
                                button.enable();
                                break;
                            case 2: button.setText('Edit District');
                                button.enable();
                                break;
                            case 3: button.setText('Edit Sub District');
                                button.enable();
                                break;
                            case 4: button.setText('Edit Sub Sub District');
                                button.enable();
                                break;
                            default: button.setText('Edit');
                                button.disable();
                                break;
                        }
                    }
                },
                {
                    xtype: 'actioncolumn',
                    icon: 'resources/icons/delete.png',
                    width: 50,
                    handler: function (view, rowIndex, colIndex, item, e, record, row) {
                        Ext.MessageBox.confirm('Confirm', 'Confirm Delete?', function (btn) {
                            if (btn == 'yes' && record.get('leaf')) {
                                var store = view.getStore();
                                store.removeAt(rowIndex, 1);
                                var panel = view.up('');
                                //console.log(record);
                                var data = {
                                    Id: record.get('Id'),
                                    Code: record.get('Code'),
                                    Name: record.get('Name'),
                                    Levels: record.get('Levels'),
                                    Parent_Id: record.get('Parent_Id'),
                                    IsLeaf: record.get('IsLeaf')
                                }
                                panel.onPost(data, "delete");
                                //store.erase();
                            } else
                                Ext.Msg.alert("Info", "notsave");
                        }
                        , this);
                    }
                }
            ],
            listeners: {
                itemexpand: 'onTreepanelItemExpand',
                selectionchange: 'onTreepanelSelectionChange'
            },
            dockedItems: [
            {
                xtype: 'toolbar',
                dock: 'top',
                items: [
                    {
                        xtype: 'textfield',
                        itemId: 'new-name'
                    },
                    {
                        xtype: 'textfield',
                        itemId: 'eng-name',
                        hidden: true
                    },
                    {
                        xtype: 'button',
                        disabled: true,
                        id: 'commondata-add-button',
                        text: 'Add',
                        listeners: {
                            click: 'addClick'
                        }
                    },
                    {
                        xtype: 'button',
                        disabled: true,
                        hidden: true,
                        id: 'commondata-edit-button',
                        text: 'Edit',
                        listeners: {
                            click: 'editClick'
                        }
                    }, {
                        xtype: 'radiogroup',
                        columns: 2,
                        hidden: true,
                        items: [
                                { boxLabel: 'parent', name: 'parent', inputValue: 0, checked: true },
                                { boxLabel: 'child', name: 'parent', inputValue: 1 }
                            ]
                    }
                ]
            },
            {
                xtype: 'toolbar',
                dock: 'top'
            }]
            ,
            onPost: function (data, action) {
                var url = 'tree/' + action;
                Ext.Ajax.request({
                    url: url,
                    method: 'post',
                    params: data,
                    contentType: "text/plain; charset=UTF-8",
                    success: function (response) {
                        //console.log(response.success);
                        var jsonResp = Ext.util.JSON.decode(response.responseText);
                        //console.log(jsonResp.success);
                        if (jsonResp.success == true) {
                            Ext.Msg.alert("Info", "ทำการลบข้อมูลเรียบร้อยแล้ว");
                            Ext.getCmp('tree-setup').getStore().load();
                        } else {
                            Ext.Msg.alert("Info", "notsave");

                        }
                    },
                    failure: function (response) {
                        console.log(response);
                        var jsonResp = Ext.util.JSON.decode(response.responseText);
                        Ext.Msg.alert("Error", jsonResp.error);
                    }
                });
            }
        }
    ]

});