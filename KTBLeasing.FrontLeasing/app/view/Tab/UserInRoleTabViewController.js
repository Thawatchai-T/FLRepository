/*
 * File: app/view/Tab/UserInRoleTabViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.Tab.UserInRoleTabViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.tabuserinroletab',

    onButtonSearchClick: function (button, e, eOpts) {
        var text = Ext.getCmp('userinrole-search-text').getValue();
        var store = this.getGridStore();

        store.getProxy().extraParams.text = text;
        Ext.getCmp('userinrole-pagingtoolbar').moveFirst();
    },

    onButtonAddClick: function (button, e, eOpts) {
        var rowEditing = this.getView().getComponent('userinrole-grid').getPlugin('rowediting');
        rowEditing.cancelEdit();

        //dummy data
        var rec = {
            Id: 2,
            ROLEID: '',
            USER_ID: 'aa_aa'
        };

        var store = this.getView().getComponent('userinrole-grid').getStore();
        //console.log(store);
        console.log(store.data.items[0]);

        if (!this.checkInsertRecord(rec, store.data.items[0].data)) {
            store.insert(0, rec);
            rowEditing.startEdit(0, 0);
        } else {
            store.removeAt(0, 1);
        }
    },

    onButtonSaveClick: function (button, e, eOpts) {
        var store = this.getView().getComponent('userinrole-grid').getStore();
        console.log(store);
        store.save();
    },

    onButtonDeleteClick: function (button, e, eOpts) {
        Ext.MessageBox.confirm('Confirm', 'Confirm Delete?', this.showResult, this);
    },

    onRowEditingBeforeEdit: function (combo) {
        var store = combo;
        console.log(store);
    },

    getGridStore: function () {

        return this.getView().getComponent('userinrole-grid').getStore();
    }
});
