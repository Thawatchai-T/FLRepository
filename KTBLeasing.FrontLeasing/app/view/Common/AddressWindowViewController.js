/*
* File: app/view/Window/AddressWindowViewController.js
*
* This file was generated by Sencha Architect version 3.1.0.
* http://www.sencha.com/products/architect/
*
* This file requires use of the Ext JS 5.0.x library, under independent license.
* License of Sencha Architect does not include license for Ext JS 5.0.x. For more
* details see http://www.sencha.com/license or contact license@sencha.com.
*
* This file will be auto-generated each and everytime you save your project.
*
* Do NOT hand edit this file.
*/

Ext.define('TabUserInformation.view.Common.AddressWindowViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.windowaddresswindow',

    getGrid: function () {
        return this.getView().getComponent('addressgrid');
    },

    getThisRecord: function () {
        return this.getGrid().getSelectionModel().getSelection()[0];
    },

    checkInsertRecord: function (rec, record) {
        return ((rec.id === record.id));
    },

    onButtonNewClick: function (button, e, eOpts) {
        var me = this,
            form = me.getView().down('form').getForm(),
            store = this.getView().down('grid').getStore(),
            NameTh = form.findField('NameTh').getValue(),
            Id = form.findField('CustomerId').getValue(),
            record = Ext.create('model.address', {
                Customer: {
                    Id: Id
                }
            });

        if (Id > 0) {
            Ext.create('widget.popupaddresspopup', {
                listeners: {
                    afterrender: function (panel, eOpts) {
                        var form = panel.down('form').getForm();

                        store.add(record);

                        form.loadRecord(record);

                        form.findField('CustomerId').setValue(Id);
                        form.findField('NameTh').setValue(NameTh);
                    }
                }
            }).show();
        } else {
            Ext.Msg.show({
                title: 'Warning',
                message: 'กรุณาทำการบันทึกข้อมูลหน้าหลักก่อน',
                buttons: Ext.Msg.OK,
                icon: Ext.Msg.WARNING
            });
        }
    },

    onItemDblClick: function (button, record, item, index, e, eOpts) {
        var me = this;

        Ext.create('widget.popupaddresspopup', {
            listeners: {
                afterrender: function (panel, eOpts) {
                    var form = panel.down('form').getForm(),
                        store = panel.lookupReference('province').getStore();

                    panel.down('#MasterPage').setValue(me.getView().getId());

                    form.loadRecord(record);

                    store.getProxy().extraParams.text = record.get('SubdistrictId');
                }
            }
        }).show();
    },

    onButtonDeleteClick: function (button, e, eOpts) {
        var grid = this.getView().down('grid'),
            store = grid.getStore(),
            selected = grid.getSelection();

        if (selected.length > 0) {
            Ext.MessageBox.confirm({
                title: 'Delete?',
                message: 'คุณต้องการลบรายการนี้ใช่หรือไม่?',
                buttons: Ext.Msg.YESNO,
                icon: Ext.Msg.QUESTION,
                fn: function (btn) {
                    if (btn === 'yes') {
                        selected[0].set('Active', false);
                        store.remove(selected[0]);

                        store.sync({
                            success: function (response, opertation) {
                                Ext.Msg.alert('Success!', 'Delete Success');
                                store.load();
                            },
                            failure: function (response, opertation) {
                                Ext.Msg.show({
                                    title: 'Error',
                                    message: 'Failure!',
                                    buttons: Ext.Msg.OK,
                                    icon: Ext.Msg.ERROR
                                });
                            }
                        });
                    }
                }
            });
        } else {
            Ext.Msg.show({
                title: 'Warning',
                message: 'กรุณาทำการเลือกรายการที่ต้องการลบ',
                buttons: Ext.Msg.OK,
                icon: Ext.Msg.WARNING
            });
        }
    }

});
