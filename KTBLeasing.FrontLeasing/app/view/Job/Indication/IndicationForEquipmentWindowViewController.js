/*
* File: app/view/Job/Indication/IndicationForEquipmentWindowViewController.js
*
* This file was generated by Sencha Architect version 3.1.0.
* http://www.sencha.com/products/architect/
*
* This file requires use of the Ext JS 5.0.x library, under independent license.
* License of Sencha Architect does not include license for Ext JS 5.0.x. For more
* details see http://www.sencha.com/license or contact license@sencha.com.
*
* This file will be auto-generated each and everytime you save your project.
*
* Do NOT hand edit this file.
*/

Ext.define('TabUserInformation.view.Job.Indication.IndicationForEquipmentWindowViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.jobindicationindicationforequipmentwindow',

    fnSave: function () {
        var view = this.getView(),
            form = view.down('form').getForm(),
            panel = Ext.getCmp('jobjobwindow'),
            grid = panel.down('jobindicationindicationforequipmenttab').down('grid'),
            store = grid.getStore(),
            record = grid.getSelection()[0];

        form.updateRecord(record);

        if (form.isValid()) {
            if (store.getModifiedRecords().length > 0) {
                store.sync({
                    success: function (batch, action) {
                        form.findField('save').setValue('Y');
                        Ext.Msg.alert('Success', 'สำเร็จแล้ว');
                    },
                    failure: function (batch, action) {
                        Ext.Msg.alert('Failure', 'ไม่สำเร็จ');
                    }
                });
            }
            //            form.submit({
            //                url: 'api/indicationequipment/put',
            //                success: function (form, action) {
            //                    Ext.Msg.alert('Success', 'สำเร็จแล้ว');
            //                },
            //                failure: function (form, action) {
            //                    Ext.Msg.alert('Failure', 'ไม่สำเร็จ');
            //                }
            //            });
        }
    },

    onButtonContactPersonClick: function (button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm();

        var popup = Ext.create('widget.commoncontactpersonpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record = panel.down('gridpanel').getSelection()[0];
                    if (record) {
                        //                         form.loadRecord(record);
                        view.lookupReference('ContactPerson').setValue(record.get('Title'));
                    }
                }
            }
        });
        popup.show();
    },

    onButtonThirdPartyClick: function (button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm();

        var popup = Ext.create('widget.thirdpartythirdpartyinfpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record = panel.down('gridpanel').getSelection()[0];
                    if (record) {
                        //                         form.loadRecord(record);
                        view.lookupReference('ThirdPartyId').setValue(record.get('NameThai'));
                    }
                }
            }
        });
        popup.show();
    },

    onButtonThirdPartyContactClick: function (button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm();

        var popup = Ext.create('widget.commoncontactpersonpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record = panel.down('gridpanel').getSelection()[0];
                    if (record) {
                        //                         form.loadRecord(record);
                        view.lookupReference('ContactPerson').setValue(record.get('Title'));
                    }
                }
            }
        });
        popup.show();
    },

    onButtonLesseeSignerClick: function (button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm();

        var popup = Ext.create('widget.commonsignerpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record = panel.down('gridpanel').getSelection()[0];
                    if (record) {
                        
                    }
                }
            }
        });
        popup.show();
    },

    onButtonKTBLSignerClick: function (button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm();

        var popup = Ext.create('widget.commonsignerpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record = panel.down('gridpanel').getSelection()[0];
                    if (record) {

                    }
                }
            }
        });
        popup.show();
    },

    onViewItemDblClick: function (dataview, record, item, index, e, eOpts) {
        var popup = Ext.create('widget.jobindicationindicationdetail'),
            form = popup.down('form').getForm();

        // var recordBusiness = Ext.create('TabUserInformation.model.IndicationForEquipment',record.get('Business'));
        form.loadRecord(record);
        form.findField('IndicationId').setValue(this.getView().down('form').getForm().findField('Id').getValue());
        // form.loadRecord(recordBusiness);
        // form.setValues(record.get('Business'));
        popup.show();
    },

    onButtonNewLineClick: function (button, e, eOpts) {
        var form = this.getView().down('form').getForm(),
            grid = this.getView().down('grid'),
            store = grid.getStore();

        var record = Ext.create('model.equipment', {
            IndicationEquipment: {
                Id: form.findField('Id').getValue()
            }
        });

        store.add(record);
        grid.getSelectionModel().select(record);

        var popup = Ext.create('widget.jobindicationindicationdetail', {
            listeners: {
                beforerender: function (panel, eOpts) {
                    var form = panel.down('form').getForm();

                    if (store.data.length > 0) {
                        form.loadRecord(record);
                    }
                },
                close: function (panel, eOpts) {
                    store.load();
                    grid.view.refresh();
                }
            }
        });
        popup.show();
    },

    onButtonEditLineClick: function (button, e, eOpts) {
        var popup = Ext.create('widget.jobindicationindicationdetail'),
            form = popup.down('form').getForm(),
            record = this.getView().down('gridpanel').getSelection()[0];

        // var recordBusiness = Ext.create('TabUserInformation.model.IndicationForEquipment',record.get('Business'));

        if (record) {
            form.loadRecord(record);
            // form.loadRecord(recordBusiness);
            // form.setValues(record.get('Business'));
            popup.show();
        }
    },

    onSaveButtonClick: function (button, e, eOpts) {
        var me = this;

        Ext.MessageBox.confirm('Confirm', 'Confirm Save?', function (msg) {
            if (msg === 'yes') {
                me.fnSave();
            }
        });
    },

    onButtonDeleteLineClick: function (button, e, eOpts) {
        var grid = this.getView().down('grid'),
            store = grid.getStore(),
            record = grid.getSelection()[0];

        if (record) {
            if (record.get('Id') != 0) {
                Ext.MessageBox.confirm('Confirm', 'Confirm Delete?',
                function (msg) {
                    if (msg == 'yes') {
                        store.remove(record);
                    }
                }, this);
            } else {
                store.remove(record);
            }
        }
    },

    onBeforeClose: function (panel, eOpts) {
        var me = this,
            form = panel.down('form').getForm();

        if (panel.closeMe) {
            panel.closeMe = false;
            return true;
        }

        if (form.findField('save').getValue() === 'N') {
            Ext.Msg.show({
                title: 'Save',
                message: 'Save Changes?',
                buttons: Ext.Msg.YESNOCANCEL,
                icon: Ext.Msg.QUESTION,
                width: 300,
                fn: function (btn) {
                    if (btn === 'yes') {
                        Ext.MessageBox.show({
                            title: 'Please wait',
                            msg: 'Saving items...',
                            progressText: 'Saving...',
                            width: 300,
                            progress: true,
                            closable: false,
                        });

                        me.fnSave();

                    } else if (btn === 'no') {
                        panel.closeMe = true;
                        panel.close();
                    }
                }
            });
        } 
        else {
            panel.closeMe = true;
            panel.close();
        }

        return false;
    },

    onClose: function (panel, eOpts) {

    }
});
