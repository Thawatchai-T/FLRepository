/*
 * File: app/view/Job/Application/Window/DefineAddressViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.Job.Application.Window.DefineAddressViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.jobapplicationwindowdefineaddress',

    onButtonAgreementClick: function(button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm(),
            store = this.getView().down('gridpanel').getStore();

        var popup = Ext.create('widget.commonaddresswindow', {
            listeners: {
                close: function (panel, eOpts) {
                    var record2 = panel.down('gridpanel').getSelection()[0];
                    if(record2){
                        //                         form.loadRecord(record);

                        //                 store.add({
                        //                     SellerName: record2.get('NameEn')
                        //                 });
                    }
                }
            }
        });
        popup.show();
    },

    onButtonAcceptanceClick: function(button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm(),
            store = this.getView().down('gridpanel').getStore();

        var popup = Ext.create('widget.commonaddresswindow', {
            listeners: {
                close: function (panel, eOpts) {
                    var record2 = panel.down('gridpanel').getSelection()[0];
                    if(record2){
                        //                         form.loadRecord(record);

                        //                 store.add({
                        //                     SellerName: record2.get('NameEn')
                        //                 });
                    }
                }
            }
        });
        popup.show();
    },

    onButtonContractClick: function(button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm(),
            store = this.getView().down('gridpanel').getStore();

        var popup = Ext.create('widget.commonaddresswindow', {
            listeners: {
                close: function (panel, eOpts) {
                    var record2 = panel.down('gridpanel').getSelection()[0];
                    if(record2){
                        //                         form.loadRecord(record);

                        //                 store.add({
                        //                     SellerName: record2.get('NameEn')
                        //                 });
                    }
                }
            }
        });
        popup.show();
    },

    onButtonCustomerClick: function(button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm(),
            store = this.getView().down('gridpanel').getStore();

        var popup = Ext.create('widget.customercusinfpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record2 = panel.down('gridpanel').getSelection()[0];
                    if(record2){
                        //                         form.loadRecord(record);

                        //                 store.add({
                        //                     SellerName: record2.get('NameEn')
                        //                 });
                    }
                }
            }
        });
        popup.show();
    },

    onButtonAddClick: function(button, e, eOpts) {

    },

    onButtonInsertClick: function(button, e, eOpts) {

    },

    onButtonDeleteClick: function(button, e, eOpts) {

    }

});
