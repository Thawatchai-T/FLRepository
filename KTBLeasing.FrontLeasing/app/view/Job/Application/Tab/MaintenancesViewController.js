/*
 * File: app/view/Job/Application/Tab/MaintenancesViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.Job.Application.Tab.MaintenancesViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.jobapplicationtabmaintenances',

    onButtonThirdPartyClick: function(button, e, eOpts) {
        var view = this.getView(),
            form = view.getForm();

        var popup = Ext.create('widget.thirdpartythirdpartyinfpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record2 = panel.down('gridpanel').getSelection()[0];
                    if(record2){
                        form.findField('PayTo').setValue(record2.get('NameEn'));
                        form.findField('PaymentCondition').setValue(record2.get('PaymentCondition'));
                    }
                }
            }
        });
        popup.show();
    },

    onComboboxChange: function(field, newValue, oldValue, eOpts) {
        var view = this.getView();

        if(newValue == 1){
            view.down('#pattern1').show();
            view.down('#pattern2').hide();
        }else if(newValue == 2){
            view.down('#pattern1').hide();
            view.down('#pattern2').show();
        }
    },

    onButtonAddClick: function(button, e, eOpts) {
        var store = this.getView().down('grid').getStore();
        var record = Ext.create('model.equipmentlist');

        store.add(record);
        this.getView().down('grid').view.refresh();
    },

    onButtonInsertClick: function(button, e, eOpts) {

    },

    onButtonDeleteClick: function(button, e, eOpts) {
        var store = this.getView().down('grid').getStore(),
            record = this.getView().down('grid').getSelection()[0];

        if(record){
            if(record.get('Id') != '0'){
                Ext.MessageBox.confirm('Confirm','Confirm Delete?',
                function(msg){
                    if(msg == 'yes'){
                        store.remove(record);
                    }
                },this);
            }else{
                store.remove(record);
            }
        }

    },

    onJobappmaintenanceBeforeRender: function(component, eOpts) {
        component.down('#pattern2').hide();
    }

});
