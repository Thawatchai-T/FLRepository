/*
 * File: app/view/Job/Application/Tab/ApplicationViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.Job.Application.Tab.ApplicationViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.jobapplicationtabapplication',

    onButtonDefineAddressClick: function(button, e, eOpts) {

        var popup = Ext.create('widget.jobapplicationwindowdefineaddress');
        //     record = this.getView(),
        //     form = popup.down('form').getForm();

        // console.log(record);
        // form.loadRecord(record);

        popup.show();
    },

    onButtonSignerClick: function(button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm(),
            store = this.getView().down('gridpanel').getStore();

        var popup = Ext.create('widget.commonsignerpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record2 = panel.down('gridpanel').getSelection()[0];
                    if(record2){
                        //                         form.loadRecord(record);

                        //                 store.add({
                        //                     SellerName: record2.get('NameEn')
                        //                 });
                    }
                }
            }
        });
        popup.show();
    },

    onButtonSignerClick2: function(button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm(),
            store = this.getView().down('gridpanel').getStore();

        var popup = Ext.create('widget.commonsignerpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record2 = panel.down('gridpanel').getSelection()[0];
                    if(record2){
                        //                         form.loadRecord(record);

                        //                 store.add({
                        //                     SellerName: record2.get('NameEn')
                        //                 });
                    }
                }
            }
        });
        popup.show();
    },

    onButtonSignerClick3: function(button, e, eOpts) {
        var view = this.getView(),
            form = view.down('form').getForm(),
            store = this.getView().down('gridpanel').getStore();

        var popup = Ext.create('widget.commonsignerpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record2 = panel.down('gridpanel').getSelection()[0];
                    if(record2){
                        //                         form.loadRecord(record);

                        //                 store.add({
                        //                     SellerName: record2.get('NameEn')
                        //                 });
                    }
                }
            }
        });
        popup.show();
    },

    onButtonApprovalClick: function(button, e, eOpts) {
        var popup = Ext.create('widget.jobapplicationwindowapproval');
        popup.show();
    },

    onGridpanelSelectionChange: function(model, selected, eOpts) {
        var form = this.getView().getForm();

        // form.findField('DepositDownPayment').setValue(selected[0].get(''));
        // form.findField('DepositDownVAT').setValue(selected[0].get(''));
        // form.findField('DepositDownTotal').setValue(selected[0].get(''));
        // form.findField('DepositEquivalent').setValue(selected[0].get(''));
        form.findField('EquipmentCost').setValue(selected[0].get('UnitPrice'));
        form.findField('EquipmentVAT').setValue(selected[0].get('VAT'));
        form.findField('EquipmentTotal').setValue(selected[0].get('UnitPrice') + selected[0].get('VAT'));
        form.findField('CostEquivalent').setValue(selected[0].get(''));
    },

    onButtonNewLineClick: function(button, e, eOpts) {
        var store = this.getView().down('grid').getStore();
        var record = Ext.create('model.equipmentlist');

        store.add(record);
        this.getView().down('grid').view.refresh();
    },

    onButtonDeleteLineClick: function(button, e, eOpts) {
        var store = this.getView().down('grid').getStore(),
            record = this.getView().down('grid').getSelection()[0];

        if(record){
            if(record.get('Id') != '0'){
                Ext.MessageBox.confirm('Confirm','Confirm Delete?',
                function(msg){
                    if(msg == 'yes'){
                        store.remove(record);
                    }
                },this);
            }else{
                store.remove(record);
            }
        }

    }

});
