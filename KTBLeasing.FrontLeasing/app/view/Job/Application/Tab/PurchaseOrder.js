/*
 * File: app/view/Job/Application/Tab/PurchaseOrder.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.Job.Application.Tab.PurchaseOrder', {
    extend: 'Ext.form.Panel',
    alias: 'widget.jobapplicationtabpurchaseorder',

    requires: [
        'TabUserInformation.view.Job.Application.Tab.PurchaseOrderViewModel',
        'TabUserInformation.view.Job.Application.Tab.PurchaseOrderViewController',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column',
        'Ext.button.Button',
        'Ext.toolbar.Paging'
    ],

    id: 'jobapppurchaseorder',
    controller: 'jobapplicationtabpurchaseorder',
    viewModel: {
        type: 'jobapplicationtabpurchaseorder'
    },
    title: 'Purchase Order',

    items: [
        {
            xtype: 'hiddenfield',
            name: 'Id'
        },
        {
            xtype: 'gridpanel',
            //store: 'purchaseOrders',
            bind: {
                store: '{purchaseOrders}'
            },
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'PONo',
                    text: 'PONo'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'PODate',
                    text: 'PODate'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'SellerId',
                    text: 'SellerId',
                    flex: -1
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'QuotationNo1',
                    text: 'QuotationNo1'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'QuotationNo2',
                    text: 'QuotationNo2'
                }
            ],
            listeners: {
                itemdblclick: 'onGridpanelItemDblClick'
            }
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            items: [
                {
                    xtype: 'button',
                    ui: 'default-small',
                    text: 'New',
                    listeners: {
                        click: 'onButtonNewClick'
                    }
                },
                {
                    xtype: 'button',
                    ui: 'default-small',
                    text: 'Edit',
                    listeners: {
                        click: 'onButtonEditClick'
                    }
                },
                {
                    xtype: 'button',
                    ui: 'default-small',
                    text: 'Delete',
                    listeners: {
                        click: 'onButtonDeleteClick'
                    }
                },
                {
                    xtype: 'button',
                    ui: 'default-small',
                    text: 'Print',
                    listeners: {
                        click: 'onButtonPrintClick'
                    }
                }
            ]
        },
        {
            xtype: 'pagingtoolbar',
            dock: 'bottom',
            ui: 'footer',
            width: 360,
            displayInfo: true,
            //store: 'purchaseOrders'
            bind: {
                store: '{purchaseOrders}'
            }
        }
    ]

});