/*
* File: app/view/Job/Application/ApplicationDetailViewController.js
*
* This file was generated by Sencha Architect version 3.1.0.
* http://www.sencha.com/products/architect/
*
* This file requires use of the Ext JS 5.0.x library, under independent license.
* License of Sencha Architect does not include license for Ext JS 5.0.x. For more
* details see http://www.sencha.com/license or contact license@sencha.com.
*
* This file will be auto-generated each and everytime you save your project.
*
* Do NOT hand edit this file.
*/

Ext.define('TabUserInformation.view.Job.Application.ApplicationDetailViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.jobapplicationapplicationdetail',

    onTabpanelBeforeRender: function (component, eOpts) {
        component.setHeight(Ext.getBody().getViewSize().height * 0.92);
    },

    onButtonSaveClick: function (button, e, eOpts) {
        var store = Ext.create('store.applicationdetails'),
        //form = this.getView().down('form').getForm(),
            storeAppDetail = Ext.create('store.appdetails'),
            form = Ext.getCmp('jobappapplication').getForm(),
            object = {},
            me = this;

        storeAppDetail.each(function (record, index) {
            var formChild = Ext.getCmp(record.get('Id')).getForm();

            for (var name in formChild.getValues()) {
                if (!formChild.findField(record.get('Name') + 'AppId')) {
                    object[record.get('Name') + '[0].AppId'] = form.findField('Id').getValue();
                    object[record.get('Name') + '[0].ApplicationDetail.Id'] = form.findField('Id').getValue();
                }

                object[record.get('Name') + '[0].' + name] = formChild.findField(name).getValue();
            }
        });

        var data = Ext.decode(sessionStorage.getItem('AppDetail'));

        //        form.submit({
        //            url: 'api/applicationdetail/dopost',
        ////            params: {
        ////                //WaiveDocument: Ext.decode(sessionStorage.getItem('AppDetail')).WaiveDocument//Ext.decode(sessionStorage.getItem('AppDetail')).WaiveDocument
        ////                data: data
        ////            },
        //            success: function (form, action) {
        //                Ext.Msg.alert('Success', 'สำเร็จแล้ว');
        //            },
        //            failure: function (form, action) {
        //                Ext.Msg.alert('Failure', 'ไม่สำเร็จ');
        //            }
        //        });

        Ext.Ajax.request({
            method: 'post',
            cache: false,
            url: 'api/applicationdetail/dopost',
            params: object,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            success: function (form, action) {
                me.saveStore('jobapplicationtabapplication', 'EquipmentList');
                me.saveStore('jobapplicationtabseller', 'Seller');
                me.saveStore('jobapplicationtabguarantor', 'GuarantorList');
                me.saveStore('jobapplicationtabinsurance', 'InsuranceEquipment');
                me.saveStore('jobapplicationtabannualtax', 'AnnualTax');
                me.saveStore('jobapplicationtabmaintenances', 'MaintenanceList');
                me.saveStore('jobapplicationtabcollectionschedule', 'CollectionSchedule');
                me.saveStore('jobapplicationtabpurchaseorder', 'PurchaseOrder');
                

                Ext.Msg.alert('Success', 'บันทึกข้อมูลเรียบร้อย');
                //                Ext.getCmp('pagingtoolbar-custinfo').moveFirst();
                //                button.up('window').close();
            },
            failure: function (form, action) {
                Ext.Msg.alert('Failed', 'กรุณาตรวจสอบว่า ชื่อผู้ใช้มีอยู่ในระบบ?');
            }
        });
    },

    saveStore: function (panel, name) {
        var grid = this.getView().down(panel).down('grid'),
            store = grid.getStore();

        if (store.getModifiedRecords().length > 0) {
            store.getProxy().extraParams.name = name;
            store.sync({
                success: function (batch) {
                    store.load();
                },
                failure: function (batch) {
                    Ext.Msg.alert('Failed', 'กรุณาตรวจสอบว่า ชื่อผู้ใช้มีอยู่ในระบบ?');
                }
            });
            //grid.view.refresh();
            //grid.doLayout();
        }
    }

//    saveFormToStore: function (panel, name) {
//        var grid = this.getView().down(panel).down('grid'),
//            store = grid.getStore(),
//            data = [];

//        store.getProxy().extraParams.name = name;

//        data[0] = this.getView().down(panel).getForm().getValues();
//        store.setData(data);

//        store.sync({
//            success: function (batch) {
//            },
//            failure: function (batch) {
//                console.log(batch);
//                Ext.Msg.alert('Failed', 'กรุณาตรวจสอบว่า ชื่อผู้ใช้มีอยู่ในระบบ?');
//            }
//        });
//        store.load();
//        grid.view.refresh();
//    }


});

