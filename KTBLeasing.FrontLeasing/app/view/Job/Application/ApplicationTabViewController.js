/*
* File: app/view/Job/Application/ApplicationTabViewController.js
*
* This file was generated by Sencha Architect version 3.1.0.
* http://www.sencha.com/products/architect/
*
* This file requires use of the Ext JS 5.0.x library, under independent license.
* License of Sencha Architect does not include license for Ext JS 5.0.x. For more
* details see http://www.sencha.com/license or contact license@sencha.com.
*
* This file will be auto-generated each and everytime you save your project.
*
* Do NOT hand edit this file.
*/

Ext.define('TabUserInformation.view.Job.Application.ApplicationTabViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.jobapplicationapplicationtab',

    onGridpanelItemDblClick: function (dataview, record, item, index, e, eOpts) {
        var store = dataview.getStore(),
            Id = record.get('Id'),
            me = this;

        sessionStorage.setItem('AppDetail', Ext.encode(record.data));

        var popup = Ext.create('widget.jobapplicationapplicationdetail', {
            listeners: {
                beforerender: function (panel, eOpts) {
                    //-- Load Form Parent --//
                    Ext.getCmp('jobappapplication').loadRecord(record);

                    //-- Load Form Child --//
                    me.onLoadForm(Ext.getCmp('jopappcommission'), 'Commission', Id);
                    me.onLoadForm(Ext.getCmp('jobappguarantor'), 'Guarantor', Id);
                    me.onLoadForm(Ext.getCmp('jobappfunding'), 'Funding', Id);
                    me.onLoadForm(Ext.getCmp('jobappstipulateloss'), 'StipulateLoss', Id);
                    me.onLoadForm(Ext.getCmp('jobappoptionatend'), 'OptionEndLeaseTerm', Id);
                    me.onLoadForm(Ext.getCmp('jobappmaintenance'), 'Maintenance', Id);
                    me.onLoadForm(Ext.getCmp('jobappinsurance'), 'Insurance', Id);
                    me.onLoadForm(Ext.getCmp('jobappwaivedocument'), 'WaiveDocument', Id);
                    me.onLoadForm(Ext.getCmp('jobappstampduty'), 'StampDuty', Id);
                    me.onLoadForm(Ext.getCmp('jobappmethodpayment'), 'MethodPayment', Id);
                    me.onLoadForm(Ext.getCmp('jobapptermcondition'), 'TermCondition', Id);
                    //me.onLoadForm(Ext.getCmp('jobappcollectionschedule'), 'CollectionSchedule', Id);

                    me.onLoadStore(Ext.getCmp('jobappseller').down('grid').getStore(), 'Seller', Id);
                },
                close: function (panel, eOpts) {
                    store.reload();
                }
            }
        });

        popup.show();
    },

    onButtonNewClick: function (button, e, eOpts) {
        var popup = Ext.create('widget.jobapplicationapplicationwindow');
        popup.show();
    },

    onLoadForm: function (form, name, id) {
        var modelName = 'TabUserInformation.model.' + name;

        form.load({
            url: 'api/ApplicationDetail',
            method: 'GET',
            params: {
                id: id,
                name: name
            },
            success: function (form, action) {
                var recordCommission = Ext.create(modelName, Ext.decode(action.response.responseText)[0]);
                form.loadRecord(recordCommission);
            },
            failure: function (form, action) {
                var recordCommission = Ext.create(modelName, Ext.decode(action.response.responseText)[0]);
                form.loadRecord(recordCommission);
            }
        });
    },

    onLoadStore: function (store, name, id) {
        store.on({
            beforeload: function (store, operation, eOpts) {
                store.getProxy().extraParams.id = id;
                store.getProxy().extraParams.name = name;
            }
        });

        store.load();
    }
});
