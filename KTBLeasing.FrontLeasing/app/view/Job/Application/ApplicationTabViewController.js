/*
 * File: app/view/Job/Application/ApplicationTabViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.Job.Application.ApplicationTabViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.jobapplicationapplicationtab',

    onGridpanelItemDblClick: function (dataview, record, item, index, e, eOpts) {
        var popup = Ext.create('widget.jobapplicationapplicationdetail'),
            form = popup.down('form').getForm();

//        var storeEquipmentLists = popup.down('#equipmentLists-grid').getStore();

//        storeEquipmentLists.getProxy().extraParams.id = record.get('Id');
//        storeEquipmentLists.load();

        var recordGuarantor = Ext.create('TabUserInformation.model.Guarantor', record.get('Guarantor')),
            recordFunding = Ext.create('TabUserInformation.model.Funding', record.get('Funding')),
            recordStipulateLoss = Ext.create('TabUserInformation.model.StipulateLoss', record.get('StipulateLoss')),
            recordOptionEndLeaseTerm = Ext.create('TabUserInformation.model.OptionEndLeaseTerm', record.get('OptionEndLeaseTerm')),
            recordCommission = Ext.create('TabUserInformation.model.Commission', record.get('Commission')),
            recordMaintenance = Ext.create('TabUserInformation.model.Maintenance', record.get('Maintenance')),
            recordInsurance = Ext.create('TabUserInformation.model.Insurance', record.get('Insurance')),
            recordCollectionSchedule = Ext.create('TabUserInformation.model.CollectionSchedule', record.get('CollectionSchedule')),
            recordWaiveDocument = Ext.create('TabUserInformation.model.WaiveDocument', record.get('WaiveDocument')),
            recordStampDuty = Ext.create('TabUserInformation.model.StampDuty', record.get('StampDuty')),
            recordMethodPayment = Ext.create('TabUserInformation.model.MethodPayment', record.get('MethodPayment'));

        form.loadRecord(record);

        Ext.getCmp('jobappguarantor').loadRecord(recordGuarantor);
        Ext.getCmp('jobappfunding').loadRecord(recordFunding);
        Ext.getCmp('jobappstipulateloss').loadRecord(recordStipulateLoss);
        Ext.getCmp('jobappoptionatend').loadRecord(recordOptionEndLeaseTerm);
        Ext.getCmp('jopappcommission').loadRecord(recordCommission);
        Ext.getCmp('jobappmaintenance').loadRecord(recordMaintenance);
        Ext.getCmp('jobappinsurance').loadRecord(recordInsurance);
        Ext.getCmp('jobappcollectionschedule').loadRecord(recordCollectionSchedule);
        Ext.getCmp('jobappwaivedocument').loadRecord(recordWaiveDocument);
        Ext.getCmp('jobappstampduty').loadRecord(recordStampDuty);
        Ext.getCmp('jobappmethodpayment').loadRecord(recordMethodPayment);



        popup.show();

    },

    onButtonNewClick: function (button, e, eOpts) {
        var popup = Ext.create('widget.jobapplicationapplicationwindow');
        popup.show();
    }

});
