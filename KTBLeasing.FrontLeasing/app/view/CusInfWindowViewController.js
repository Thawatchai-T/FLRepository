/*
 * File: app/view/CusInfWindowViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.view.CusInfWindowViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.cusinfwindow',

    onResetClick: function() {
        console.log(this);
        this.getView().reset();
    },

    onButtonAddressClick: function(button, e, eOpts) {
        var popup = Ext.create("widget.addresswindow");
        popup.show();
    },

    onButtonSignClick: function(button, e, eOpts) {
        var popup = Ext.create("widget.signerwindow");
        popup.show();
    },

    onButtonContactPersonClick: function(button, e, eOpts) {
        var popup = Ext.create("widget.contactpersonwindow");
        popup.show();
    },

    onButtonAffidavitClick: function(button, e, eOpts) {
        var popup = Ext.create("widget.affidavitwindow");
        popup.show();
    },

    onButtonPowerOfAttorneyClick: function(button, e, eOpts) {
        var popup = Ext.create("widget.powerofattorneywindow");
        popup.show();
    },

    onButtonNewClick1: function(button, e, eOpts) {
        // Create new register form window
        var popup = Ext.create("widget.userinfwindow");
        // Show window
        popup.show();
    },

    onButtonResetClick: function(button, e, eOpts) {
        this.getView().items.items[0].getForm().reset();
    }

});
