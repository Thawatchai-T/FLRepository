/*
* File: app/view/Tab/CusInfTabViewController.js
*
* This file was generated by Sencha Architect version 3.1.0.
* http://www.sencha.com/products/architect/
*
* This file requires use of the Ext JS 5.0.x library, under independent license.
* License of Sencha Architect does not include license for Ext JS 5.0.x. For more
* details see http://www.sencha.com/license or contact license@sencha.com.
*
* This file will be auto-generated each and everytime you save your project.
*
* Do NOT hand edit this file.
*/

Ext.define('TabUserInformation.view.Customer.CusInfTabViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.tabcusinftab',

    onTextfieldKeyup: function (textfield, e, eOpts) {
        var grid = this.getView().down('gridpanel'),
            filters = grid.store.getFilters(),
            radiogroup = this.getView().down('radiogroup'),
            property = null,
            store = grid.getStore();

        switch (radiogroup.getChecked()[0].inputValue) {
            case 'code':
                property = 'CustomerId';
                break;
            case 'eng':
                property = 'CustomerEngName';
                break;
            case 'thai':
                property = 'CustomerThaiName';
                break;
        }

        if (textfield.value) {
            this.nameFilter = filters.add({ id: 'nameFilter',
                property: property,
                value: textfield.value,
                anyMatch: true,
                caseSensitive: false
            });
        } else if (this.nameFilter) {
            filters.remove(this.nameFilter);
            this.nameFilter = null;
        }

        //        if (textfield.value) {
        //            store.getProxy().extraParams.text = textfield.value;
        //            store.getProxy().extraParams.property = property;
        //            Ext.getCmp('pagingtoolbar-custinfo').moveFirst();
        //        }
        //        else {
        //            store.getProxy().setExtraParams({});
        //            store.load();
        //        }
    },

    onGridpanelItemDblClick: function (dataview, record, item, index, e, eOpts) {
        var popup = Ext.create('widget.customercusinfwindow', {
            listeners: {
                beforerender: function (panel, eOpts) {
                    var form = panel.down('form').getForm(),
                        btnreset = panel.lookupReference('btnreset');

                    btnreset.hide();

                    var storeBackground = Ext.getStore('backgrounds');
                    storeBackground.getProxy().extraParams.custId = record.get('CustomerId');
                    storeBackground.load(function (records, operation, success) {
                        form.loadRecord(records[0]);
                        form.loadRecord(record);
                    });
                }
            }
        }).show();
    },

    onButtonClick: function (button, e, eOpts) {
        var popup = Ext.create("widget.customercusinfwindow");
        popup.show();
    },

    onButtonEditClick1: function (button, e, eOpts) {
        var selected = this.getView().down('gridpanel').getSelection();

        if (selected.length > 0) {
            var popup = Ext.create('widget.customercusinfwindow', {
                listeners: {
                    beforerender: function (panel, eOpts) {
                        var form = panel.down('form').getForm(),
                            btnreset = panel.lookupReference('btnreset');

                        btnreset.hide();

                        var storeBackground = Ext.getStore('backgrounds');
                        storeBackground.getProxy().extraParams.custId = selected[0].get('CustomerId');
                        storeBackground.load(function (records, operation, success) {
                            form.loadRecord(records[0]);
                            form.loadRecord(selected[0]);
                        });
                    }
                }
            }).show();
        }
    }

});
