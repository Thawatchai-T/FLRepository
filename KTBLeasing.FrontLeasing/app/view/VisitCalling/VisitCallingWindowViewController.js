/*
* File: app/view/VisitCalling/VisitCallingWindowViewController.js
*
* This file was generated by Sencha Architect version 3.1.0.
* http://www.sencha.com/products/architect/
*
* This file requires use of the Ext JS 5.0.x library, under independent license.
* License of Sencha Architect does not include license for Ext JS 5.0.x. For more
* details see http://www.sencha.com/license or contact license@sencha.com.
*
* This file will be auto-generated each and everytime you save your project.
*
* Do NOT hand edit this file.
*/

Ext.define('TabUserInformation.view.VisitCalling.VisitCallingWindowViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.visitcallingvisitcallingwindow',

    fnSave: function () {
        var form = this.getView().down('form').getForm(),
            record = form.getRecord();

        form.updateRecord(record);

        record.store.sync({
            success: function (batch) {
                Ext.Msg.alert('Success', 'บันทึกข้อมูลเรียบร้อย');
            },
            failure: function (batch) {
                 Ext.Msg.show({
                    title: 'Error',
                    message: response.responseText,
                    buttons: Ext.Msg.OK,
                    icon: Ext.Msg.ERROR
                });
            }
        })
    },

    Shows: function (field, status) {
        var chkboxgroup = this.getView().down('checkboxgroup');
        console.log(field);
        if (status) {
            field.show();
        } else {
            if (chkboxgroup.items.items[0].checked === true || chkboxgroup.items.items[1].checked === true ||
               chkboxgroup.items.items[4].checked === true || chkboxgroup.items.items[5].checked === true)
            { }
            else {
                field.hide();
            }
        }
    },

    ShowsDefault: function (field, status) {
        if (status) {
            field.show();
        } else {
            field.hide();
        }
    },

    onButtonCusInfClick: function (button, e, eOpts) {
        var form = this.getView().down('form').getForm(),
            view = this.getView();

        var popup = Ext.createByAlias('widget.customercusinfpopup', {
            listeners: {
                beforerender: function (panel, eOpts) {
                     panel.down('#custinf-toolbar').hide();
                },
                close: function (panel, eOpts) {
                    var record = panel.down('gridpanel').getSelection()[0];
                    if (record) {
                        form.loadRecord(record);
                        form.findField('CustomerId').setValue(record.get('CustomerCode'));
                        form.findField('SubdistrictId').setValue(record.get('SubdistrictId'));
                        form.findField('ContactPersonTitleNameTh').setValue(record.get('ContactTitleTh'));
                        form.findField('ContactPersonFirstNameTh').setValue(record.get('ContactPersonFirstName'));
                        form.findField('ContactPersonLastNameTh').setValue(record.get('ContactPersonLastName'));
                        form.findField('Position').setValue(record.get('PositionTh'));
                    }
                }
            }

        });
        var store = popup.down('gridpanel').getStore();
        store.load();
        popup.show();
    },

    onButtonAddressClick: function (button, e, eOpts) {
        var form = this.getView().down('form').getForm(),
            custid = form.findField('CustomerId').getValue(),

        popup = Ext.create('widget.windowaddressviews', {
            listeners: {
                beforeshow: function (panel, eOpts) {
                    var store = panel.lookupReference('addressgrid').getStore();

                    Ext.getCmp('addresstoolbar').hide();

                    store.getProxy().extraParams.text = custid;
                    store.load(function(records, operation, success) {
                        panel.down('form').getForm().findField('CustomerId').setValue('<b style="color:green;">' + custid + '</b>');
                        if(records.length > 0) {
                            panel.down('form').getForm().findField('CustomerThaiName').setValue('<b style="color:green;">' + records[0].data.Customer.NameTh + '</b>');
                        }
                    });
                },
                close: function (panel, eOpts) {
                    var record = panel.down('gridpanel').getSelection()[0];
                    if (record) {
                        form.findField('AddressTh').setValue(record.get('AddressTh'));
                        form.findField('SubdistrictId').setValue(record.get('SubdistrictId'));
                    }
                }
            }
        }).show();
    },

    onButtonVisitCallingClick: function (button, e, eOpts) {
        var form = this.getView().down('form').getForm();

        var popup = Ext.createByAlias('widget.visitcallingvisitcallingpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record = panel.down('gridpanel').getSelection()[0];
                    if (record) {
                        form.loadRecord(record);
                    }
                }
            }
        });
        popup.show();
    },

    onButtonContactPersonClick: function (button, e, eOpts) {

        var form = this.getView().down('form').getForm(),
        view = this.getView(),
        popup = Ext.create('widget.commoncontactpersonpopup', {
            listeners: {
                close: function (panel, eOpts) {
                    var record = panel.down('gridpanel').getSelection()[0];
                    if (record) {
                        //                        form.loadRecord(record);
                        //                        console.log(view.down('#ContactPersonTitleNameTh'));

                        view.down('#ContactPersonTitleNameTh').setValue(record.get('TitleTh'));
                        view.down('#ContactPersonFirstNameTh').setValue(record.get('FirstNameTh'));
                        view.down('#ContactPersonLastNameTh').setValue(record.get('LastNameTh'));
                        view.down('#Telephone').setValue(record.get('Telephone'));
                        view.down('#FaxNo').setValue(record.get('Fax'));
                        view.down('#Email').setValue(record.get('Email'));
                    }
                }
            }
        });

        var store = popup.down('gridpanel').getStore();
        store.getProxy().extraParams.custId = form.findField('CustomerId').getValue();
        store.load();



        popup.show();
    },

    onCheckboxfieldChange: function (field, newValue, oldValue, eOpts) {
        var textBox = Ext.getCmp('detail');
        this.Shows(textBox, newValue);
    },

    onCheckboxfieldChange1: function (field, newValue, oldValue, eOpts) {
        var textBox = Ext.getCmp('detail');
        this.Shows(textBox, newValue);
    },

    onCheckboxfieldChange2: function (field, newValue, oldValue, eOpts) {
        var textBox = Ext.getCmp('type-of-lease-equipment');
        var textBox2 = Ext.getCmp('leasing-company');
        var textBox3 = Ext.getCmp('term-and-condition');
        this.ShowsDefault(textBox, newValue);
        this.ShowsDefault(textBox2, newValue);
        this.ShowsDefault(textBox3, newValue);
    },

    onCheckboxfieldChange5: function (field, newValue, oldValue, eOpts) {
        var textBox = Ext.getCmp('type-of-hp-equipment');
        var textBox2 = Ext.getCmp('hp-company');
        var textBox3 = Ext.getCmp('hp-term-and-condition');
        this.ShowsDefault(textBox, newValue);
        this.ShowsDefault(textBox2, newValue);
        this.ShowsDefault(textBox3, newValue);
    },

    onCheckboxfieldChange3: function (field, newValue, oldValue, eOpts) {
        var textBox = Ext.getCmp('detail');
        this.Shows(textBox, newValue);
    },

    onCheckboxfieldChange4: function (field, newValue, oldValue, eOpts) {
        var textBox = Ext.getCmp('detail');
        this.Shows(textBox, newValue);
    },

    onSaveClick: function (button, e, eOpts) {
        var me = this;

        Ext.MessageBox.confirm('Confirm', 'Confirm Save?', function (msg) {
            if (msg === 'yes') {
                me.fnSave();
            }
        });
    },

    onSetAddressCustomer: function (form, record) {
        form.loadRecord(record);
        form.findField('CustomerId').setValue(record.get('CustomerCode'));
        form.findField('SubdistrictId').setValue(record.get('SubdistrictId'));
    },

    onBeforeClose: function (panel, eOpts) {
        var me = this,
            form = panel.down('form').getForm();

        if (panel.closeMe) {
            panel.closeMe = false;
            return true;
        }

        if (form.findField('save').getValue() === 'N') {
            Ext.Msg.show({
                title: 'Save',
                message: 'Save Changes?',
                buttons: Ext.Msg.YESNOCANCEL,
                icon: Ext.Msg.QUESTION,
                width: 300,
                fn: function (btn) {
                    if (btn === 'yes') {
                        Ext.MessageBox.show({
                            title: 'Please wait',
                            msg: 'Saving items...',
                            progressText: 'Saving...',
                            width: 300,
                            progress: true,
                            closable: false,
                        });

                        me.fnSave();

                    } else if (btn === 'no') {
                        panel.closeMe = true;
                        panel.close();
                    }
                }
            });
        }else {
            panel.closeMe = true;
            panel.close();
        }

        return false;
    },

    onClose: function (panel, eOpts) {

    }

});
