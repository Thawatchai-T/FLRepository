/*
 * File: app/model/Equipment.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.model.Equipment', {
    extend: 'Ext.data.Model',
    alias: 'model.equipment',

    requires: [
        'Ext.data.field.Integer',
        'Ext.data.field.Date',
        'Ext.data.field.Number'
    ],

    idProperty: 'Id',

    fields: [
        {
            type: 'int',
            name: 'Id'
        },
        {
            type: 'int',
            name: 'IndicationId'
        },
        {
            name: 'EquipmentName'
        },
        {
            type: 'date',
            name: 'EquipmentDate',
            dateWriteFormat: 'MS'
        },
        {
            type: 'float',
            name: 'Quantity'
        },
        {
            type: 'float',
            name: 'Cost'
        },
        {
            type: 'int',
            name: 'Term'
        },
        {
            type: 'int',
            name: 'Deposit'
        },
        {
            type: 'float',
            name: 'DepositAmount'
        },
        {
            type: 'int',
            name: 'RV'
        },
        {
            type: 'float',
            name: 'RVAmount'
        },
        {
            type: 'float',
            name: 'IRRNet'
        },
        {
            type: 'float',
            name: 'IRRGross'
        },
        {
            type: 'float',
            name: 'AbnormalRental'
        },
        {
            type: 'float',
            name: 'Rental'
        },
        {
            type: 'float',
            name: 'TotalMA'
        },
        {
            type: 'int',
            name: 'Payment'
        },
        {
            type: 'int',
            name: 'AdvanceArrear'
        },
        {
            type: 'int',
            name: 'InsuranceBorne'
        },
        {
            type: 'int',
            name: 'ConditionLease'
        },
        {
            type: 'int',
            name: 'InsTerritory'
        },
        {
            name: 'InsRemark'
        },
        {
            name: 'OtherCondition'
        },
        {
            type: 'int',
            name: 'Result'
        },
        {
            type: 'int',
            name: 'ResultQuantity'
        }
    ]
});