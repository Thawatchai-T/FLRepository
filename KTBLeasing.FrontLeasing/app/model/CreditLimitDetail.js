/*
 * File: app/model/CreditLimitDetail.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TabUserInformation.model.CreditLimitDetail', {
    extend: 'Ext.data.Model',
    alias: 'model.creditlimitdetail',

    requires: [
        'Ext.data.field.Number'
    ],

    proxy: {
        type: 'rest',
        url: 'api/CreditLimitDetail',
        reader: {
            type: 'json',
            rootProperty: 'data',
            totalProperty: 'total'
        },
        writer: {
            type: 'json',
            writeAllFields: true,
            allowSingle: false
        },
        api: {
            create: 'api/CreditLimitDetail/Post'
        }
    },

    idProperty: 'Id',

//    identifier: {
//        type: 'negative',
//        //seed: 1000
//    },

    fields: [
        {
            type: 'int',
            name: 'Id'
        },
        {
            type: 'string',
            name: 'AssetType'
        },
        {
            type: 'int',
            name: 'MainAsset'
        },
        {
            type: 'int',
            name: 'SubAsset'
        },
        {
            type: 'int',
            name: 'DetailAsset'
        },
        {
            type: 'int',
            name: 'Marketable'
        },
        {
            type: 'float',
            name: 'Amount'
        },
        {
            type: 'float',
            name: 'LimitAmount'
        },
        {
            type: 'int',
            name: 'DownHireInsurance'
        },
        {
            type: 'float',
            name: 'DownRate'
        },
        {
            type: 'float',
            name: 'ScrapValue'
        },
        {
            type: 'float',
            name: 'ScrapPercent'
        },
        {
            type: 'float',
            name: 'FlatRate'
        },
        {
            type: 'float',
            name: 'EffectiveRate'
        },
        {
            type: 'float',
            name: 'KTBMLR'
        },
        {
            type: 'int',
            name: 'Term'
        },
        {
            type: 'int',
            name: 'TermStyle'
        },
        {
            type: 'int',
            name: 'MethodPayment'
        },
        {
            type: 'int',
            name: 'ChequeCondition'
        },
        {
            type: 'int',
            name: 'Guarantor'
        },
        {
            type: 'int',
            name: 'Insurance'
        },
        {
            type: 'int',
            name: 'InsuranceBy'
        },
        {
            type: 'int',
            name: 'RegisterCapital'
        },
        {
            type: 'int',
            name: 'RegisterCapitalBy'
        },
        {
            type: 'int',
            name: 'RegisterCapitalAgency'
        },
        {
            type: 'string',
            name: 'OtherCondition'
        },
        {
            name: 'Total',
            mapping: 'CreditLimitApproval.Total'
        },
        {
            type: 'int',
            name: 'TypeLeasing',
        },
        {
            type: 'string',
            name: 'TypeLeasingCode',
            convert: function (v, rec) {
                var result;
                if(rec.get('TypeLeasing')){
                    result = Ext.getStore('CommonData.typeLeasings').getById(rec.get('TypeLeasing')).get('Code');
                }else{
                    result = null;
                }
                return result;
            },
            depends: ['TypeLeasing']
        },
        {
            type: 'float',
            name: 'LimitHPAmount',
            mapping: 'CreditLimitApproval.LimitHPAmount'
        },
        {
            type: 'float',
            name: 'LimitLeaseAmount',
            mapping: 'CreditLimitApproval.LimitLeaseAmount'
        },
        {
            type: 'boolean',
            name: 'Active',
            defaultValue: true
        },
        {
            type: 'int',
            name: 'CreditLimitId',
            reference: {
                parent: 'TabUserInformation.model.CreditApproval'
            }
        }

    ],

    hasMany: {
        model: 'TabUserInformation.model.GuarantorModel',
        name: 'Guarantor',
        foreignKey: 'Id'
    }
});